{"ast":null,"code":"var _jsxFileName = \"/home/denis/vud/src/components/RebusContainer/RebusContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FlipCard } from '../FlipCard';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RebusContainer = _ref => {\n  _s();\n  let {\n    data,\n    right,\n    setConuter,\n    counter\n  } = _ref;\n  const [currentNum, setCurrentNum] = useState(0);\n  const [value, setValue] = useState('');\n  const [showButton, setShowButton] = useState(false);\n  const currentRebus = data[currentNum];\n  const [text, setText] = useState(false);\n\n  // const click=()=>{\n  //     if(value.toLowerCase()===currentRebus.answer.toLowerCase()){\n  //         console.log(\"верно\")\n  //     }\n  // }\n  useEffect(() => {\n    if (value.toLowerCase() === currentRebus.answer.toLowerCase()) {\n      setShowButton(true);\n      setConuter(prev => {\n        return prev + 1;\n      });\n    }\n  }, [value]);\n  const onClick = () => {\n    if (currentNum >= data.length - 1) {\n      setText(true);\n    } else {\n      setCurrentNum(currentNum + 1);\n      setShowButton(false);\n      setValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `wrapper wrapper-words ${right ? 'right-wrapper' : ''}`,\n    children: counter > 1 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u044B \\u0440\\u0430\\u0437\\u0433\\u0430\\u0434\\u0430\\u043B\\u0438 \\u0432\\u0441\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430, \\u0433\\u043E\\u0442\\u043E\\u0432\\u044B \\u0434\\u0432\\u0438\\u0433\\u0430\\u0442\\u044C\\u0441\\u044F \\u0434\\u0430\\u043B\\u044C\\u0448\\u0435?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : !text ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container flex-container-column\",\n      children: [/*#__PURE__*/_jsxDEV(FlipCard, {\n        img: currentRebus.img,\n        text: currentRebus.answer,\n        state: showButton,\n        click: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: e => setValue(e.target.value),\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"\\u041A\\u0442\\u043E \\u0437\\u0430\\u0448\\u0438\\u0444\\u0440\\u043E\\u0432\\u0430\\u043D \\u0432 \\u0440\\u0435\\u0431\\u0443\\u0441\\u0435?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u044B \\u0440\\u0430\\u0437\\u0433\\u0430\\u0434\\u0430\\u043B\\u0438 \\u0432\\u0441\\u0435 \\u0440\\u0435\\u0431\\u0443\\u0441\\u044B, \\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435\\u0441\\u044C \\u0432\\u0442\\u043E\\u0440\\u0443\\u044E \\u043A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(RebusContainer, \"H5qXX/trFrK2b9+QUU5HUs/nans=\");\n_c = RebusContainer;\nvar _c;\n$RefreshReg$(_c, \"RebusContainer\");","map":{"version":3,"names":["React","useState","useEffect","FlipCard","RebusContainer","data","right","setConuter","counter","currentNum","setCurrentNum","value","setValue","showButton","setShowButton","currentRebus","text","setText","toLowerCase","answer","prev","onClick","length","img","e","target"],"sources":["/home/denis/vud/src/components/RebusContainer/RebusContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlipCard } from '../FlipCard';\n\nimport './style.css'\nexport const RebusContainer = ({ data, right, setConuter, counter }) => {\n    const [currentNum, setCurrentNum] = useState(0)\n    const [value, setValue] = useState('');\n    const [showButton, setShowButton] = useState(false)\n    const currentRebus = data[currentNum]\n    const [text, setText] = useState(false)\n\n    // const click=()=>{\n    //     if(value.toLowerCase()===currentRebus.answer.toLowerCase()){\n    //         console.log(\"верно\")\n    //     }\n    // }\n    useEffect(() => {\n        if (value.toLowerCase() === currentRebus.answer.toLowerCase()) {\n            setShowButton(true)\n            setConuter((prev) => {\n                return prev + 1\n            })\n        }\n    }, [value])\n\n    const onClick = () => {\n        if (currentNum >= data.length - 1) {\n            setText(true)\n        } else {\n            setCurrentNum(currentNum + 1)\n            setShowButton(false)\n            setValue('')\n        }\n    }\n    return (\n        <div className={`wrapper wrapper-words ${right ? 'right-wrapper' : ''}`} >\n            {counter > 1 ?\n                <h1>Вы разгадали все слова, готовы двигаться дальше?</h1> :\n                !text ? <div className='flex-container flex-container-column'>\n                    {/* <img className='image' src={currentRebus.img} alt='img' /> */}\n                    <FlipCard\n                        img={currentRebus.img}\n                        text={currentRebus.answer}\n                        state={showButton}\n                        click={onClick} />\n\n                    <input value={value} onChange={(e) => setValue(e.target.value)} className='input' type=\"text\" placeholder=\"Кто зашифрован в ребусе?\" />\n\n                </div> :\n                    <h1>Вы разгадали все ребусы, дождитесь вторую команду</h1>\n            }\n\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAO,aAAa;AAAA;AACpB,OAAO,MAAMC,cAAc,GAAG,QAA0C;EAAA;EAAA,IAAzC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EAC/D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMc,YAAY,GAAGV,IAAI,CAACI,UAAU,CAAC;EACrC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA;EACA;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIS,KAAK,CAACO,WAAW,EAAE,KAAKH,YAAY,CAACI,MAAM,CAACD,WAAW,EAAE,EAAE;MAC3DJ,aAAa,CAAC,IAAI,CAAC;MACnBP,UAAU,CAAEa,IAAI,IAAK;QACjB,OAAOA,IAAI,GAAG,CAAC;MACnB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,MAAMU,OAAO,GAAG,MAAM;IAClB,IAAIZ,UAAU,IAAIJ,IAAI,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC/BL,OAAO,CAAC,IAAI,CAAC;IACjB,CAAC,MAAM;MACHP,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC7BK,aAAa,CAAC,KAAK,CAAC;MACpBF,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EACD,oBACI;IAAK,SAAS,EAAG,yBAAwBN,KAAK,GAAG,eAAe,GAAG,EAAG,EAAE;IAAA,UACnEE,OAAO,GAAG,CAAC,gBACR;MAAA,UAAI;IAAgD;MAAA;MAAA;MAAA;IAAA,QAAK,GACzD,CAACQ,IAAI,gBAAG;MAAK,SAAS,EAAC,sCAAsC;MAAA,wBAEzD,QAAC,QAAQ;QACL,GAAG,EAAED,YAAY,CAACQ,GAAI;QACtB,IAAI,EAAER,YAAY,CAACI,MAAO;QAC1B,KAAK,EAAEN,UAAW;QAClB,KAAK,EAAEQ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAEtB;QAAO,KAAK,EAAEV,KAAM;QAAC,QAAQ,EAAGa,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE;QAAC,SAAS,EAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAErI,gBACF;MAAA,UAAI;IAAiD;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QAGhE;AAEd,CAAC;AAAC,GAlDWP,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}